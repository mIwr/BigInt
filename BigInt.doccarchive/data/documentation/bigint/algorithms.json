{"sections":[],"kind":"article","abstract":[{"type":"text","text":"Some of the algorithms used in BigInt are described below"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"","level":2,"anchor":""},{"anchor":"Multiplication","type":"heading","level":3,"text":"Multiplication"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Schonhage-Strassen FFT based algorithm for numbers with more than 384.000 bits"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"ToomCook-3 algorithm for numbers with more than 12.800 bits"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Karatsuba algorithm for numbers with more than 6.400 bits"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Basecase - Knuth algorithm M"}]}]}]},{"type":"heading","level":3,"text":"Division and Remainder","anchor":"Division-and-Remainder"},{"items":[{"content":[{"inlineContent":[{"text":"Burnikel-Ziegler algorithm for divisors with more than 3.840 bits provided the dividend has at least 3.840 bits more than the divisor","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Basecase - Knuth algorithm D"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Exact Division - Jebelean’s exact division algorithm","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","anchor":"Greatest-Common-Divisor","level":3,"text":"Greatest Common Divisor"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Recursive GCD algorithm 9.4.6 from [CRANDALL] for numbers with more than 128.000 bits","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2 for smaller numbers, with binary GCD basecase"}]}]}]},{"text":"Extended Greatest Common Divisor","anchor":"Extended-Greatest-Common-Divisor","level":3,"type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Recursive GCD algorithm 9.4.6 from [CRANDALL] for numbers with more than 64.000 bits, with extra logic to track cofactors","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2 and exercise 18 for smaller numbers","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","text":"Modular Exponentiation","level":3,"anchor":"Modular-Exponentiation"},{"type":"paragraph","inlineContent":[{"text":"Sliding window algorithm 14.85 from [HANDBOOK] using Barrett reduction algorithm 14.42","type":"text"}]},{"level":3,"anchor":"Inverse-Modulus","text":"Inverse Modulus","type":"heading"},{"inlineContent":[{"text":"If the modulus is a (not too large) power of 2, the algorithm from [KOC] section 7,","type":"text"},{"type":"text","text":" "},{"text":"else it is computed via the extended GCD algorithm","type":"text"}],"type":"paragraph"},{"text":"Square Root","anchor":"Square-Root","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Algorithm 1.12 (SqrtRem) from [BRENT] with algorithm 9.2.11 from [CRANDALL] as basecase"}]},{"level":3,"type":"heading","anchor":"Square-Root-Modulo-a-Prime-Number","text":"Square Root Modulo a Prime Number"},{"inlineContent":[{"text":"Algorithm 2.3.8 from [CRANDALL]","type":"text"}],"type":"paragraph"},{"anchor":"Random-Numbers","level":3,"type":"heading","text":"Random Numbers"},{"inlineContent":[{"text":"Random ","type":"text"},{"type":"codeVoice","code":"BInt"},{"type":"text","text":" numbers are generated using the cryptographically secure function "},{"type":"codeVoice","code":"SecRandomCopyBytes"}],"type":"paragraph"},{"level":3,"type":"heading","anchor":"Prime-Number-Test","text":"Prime Number Test"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Miller-Rabin test"}]},{"text":"Prime Number Generation","type":"heading","level":3,"anchor":"Prime-Number-Generation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The algorithm from Java BigInteger translated to Swift"}]},{"level":3,"anchor":"Factorial","text":"Factorial","type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"SplitRecursive","type":"codeVoice"},{"text":" algorithm from Peter Luschny: ","type":"text"},{"identifier":"https:\/\/www.luschny.de","type":"reference","isActive":true}],"type":"paragraph"},{"level":3,"anchor":"Fibonacci","type":"heading","text":"Fibonacci"},{"inlineContent":[{"type":"text","text":"The "},{"code":"fastDoubling","type":"codeVoice"},{"type":"text","text":" algorithm from Project Nayuki: "},{"identifier":"https:\/\/www.nayuki.io","isActive":true,"type":"reference"}],"type":"paragraph"},{"level":3,"type":"heading","anchor":"Jacobi-and-Kronecker-symbols","text":"Jacobi and Kronecker symbols"},{"type":"paragraph","inlineContent":[{"text":"Algorithm 2.3.5 from [CRANDALL]","type":"text"}]},{"level":3,"anchor":"Bernoulli-Numbers","text":"Bernoulli Numbers","type":"heading"},{"inlineContent":[{"type":"text","text":"Computed via Tangent numbers which is fast because it only involves integer arithmetic"},{"text":" ","type":"text"},{"type":"text","text":"but no fraction arithmetic"}],"type":"paragraph"},{"text":"Chinese Remainder Theorem","type":"heading","anchor":"Chinese-Remainder-Theorem","level":3},{"inlineContent":[{"text":"The Garner algorithm 2.1.7 from [CRANDALL]","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/bigint.BigInt\/documentation\/BigInt"]]},"metadata":{"title":"Algorithms","modules":[{"name":"BigInt"}],"role":"article","roleHeading":"Article"},"seeAlsoSections":[{"title":"Articles","anchor":"Articles","generated":true,"identifiers":["doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt","doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBFraction","doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","doc:\/\/bigint.BigInt\/documentation\/BigInt\/References"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigint\/algorithms"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Algorithms"},"references":{"doc://bigint.BigInt/documentation/BigInt/AboutBFraction":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBFraction","abstract":[{"text":"Signed fractions with numerator and denominator of unbounded size","type":"text"}],"url":"\/documentation\/bigint\/aboutbfraction","type":"topic","role":"article","title":"About BFraction","kind":"article"},"https://www.luschny.de":{"identifier":"https:\/\/www.luschny.de","title":"https:\/\/www.luschny.de","url":"https:\/\/www.luschny.de","type":"link","titleInlineContent":[{"type":"text","text":"https:\/\/www.luschny.de"}]},"doc://bigint.BigInt/documentation/BigInt/Performance":{"type":"topic","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","kind":"article","abstract":[{"text":"Execution times for certain BigInt operations","type":"text"}],"title":"Performance","url":"\/documentation\/bigint\/performance","role":"article"},"doc://bigint.BigInt/documentation/BigInt/AboutCRT":{"type":"topic","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","kind":"article","abstract":[{"text":"Chinese Remainder Theorem","type":"text"}],"title":"About CRT","url":"\/documentation\/bigint\/aboutcrt","role":"article"},"doc://bigint.BigInt/documentation/BigInt":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt","url":"\/documentation\/bigint","kind":"symbol","title":"BigInt","abstract":[{"type":"text","text":"Signed integers and fractions of unbounded size"}],"role":"collection","type":"topic"},"doc://bigint.BigInt/documentation/BigInt/AboutBInt":{"type":"topic","url":"\/documentation\/bigint\/aboutbint","title":"About BInt","role":"article","abstract":[{"text":"Signed integers of unbounded size","type":"text"}],"kind":"article","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt"},"https://www.nayuki.io":{"identifier":"https:\/\/www.nayuki.io","title":"https:\/\/www.nayuki.io","url":"https:\/\/www.nayuki.io","type":"link","titleInlineContent":[{"type":"text","text":"https:\/\/www.nayuki.io"}]},"doc://bigint.BigInt/documentation/BigInt/References":{"type":"topic","title":"References","url":"\/documentation\/bigint\/references","role":"article","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/References","kind":"article"}}}