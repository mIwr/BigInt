{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"article","title":"Algorithms","modules":[{"name":"BigInt"}],"roleHeading":"Article"},"kind":"article","primaryContentSections":[{"content":[{"type":"heading","anchor":"","level":2,"text":""},{"level":3,"text":"Multiplication","anchor":"Multiplication","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Schonhage-Strassen FFT based algorithm for numbers with more than 384.000 bits"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"ToomCook-3 algorithm for numbers with more than 12.800 bits","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Karatsuba algorithm for numbers with more than 6.400 bits"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Basecase - Knuth algorithm M"}]}]}],"type":"unorderedList"},{"type":"heading","anchor":"Division-and-Remainder","text":"Division and Remainder","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Burnikel-Ziegler algorithm for divisors with more than 3.840 bits provided the dividend has at least 3.840 bits more than the divisor","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Basecase - Knuth algorithm D","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Exact Division - Jebelean’s exact division algorithm","type":"text"}],"type":"paragraph"}]}]},{"level":3,"text":"Greatest Common Divisor","anchor":"Greatest-Common-Divisor","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Recursive GCD algorithm 9.4.6 from [CRANDALL] for numbers with more than 128.000 bits"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2 for smaller numbers, with binary GCD basecase"}]}]}]},{"level":3,"text":"Extended Greatest Common Divisor","anchor":"Extended-Greatest-Common-Divisor","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Recursive GCD algorithm 9.4.6 from [CRANDALL] for numbers with more than 64.000 bits, with extra logic to track cofactors"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2 and exercise 18 for smaller numbers"}]}]}],"type":"unorderedList"},{"text":"Modular Exponentiation","type":"heading","level":3,"anchor":"Modular-Exponentiation"},{"type":"paragraph","inlineContent":[{"text":"Sliding window algorithm 14.85 from [HANDBOOK] using Barrett reduction algorithm 14.42","type":"text"}]},{"anchor":"Inverse-Modulus","type":"heading","text":"Inverse Modulus","level":3},{"inlineContent":[{"type":"text","text":"If the modulus is a (not too large) power of 2, the algorithm from [KOC] section 7,"},{"text":" ","type":"text"},{"type":"text","text":"else it is computed via the extended GCD algorithm"}],"type":"paragraph"},{"level":3,"text":"Square Root","type":"heading","anchor":"Square-Root"},{"inlineContent":[{"type":"text","text":"Algorithm 1.12 (SqrtRem) from [BRENT] with algorithm 9.2.11 from [CRANDALL] as basecase"}],"type":"paragraph"},{"level":3,"text":"Square Root Modulo a Prime Number","anchor":"Square-Root-Modulo-a-Prime-Number","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Algorithm 2.3.8 from [CRANDALL]","type":"text"}]},{"type":"heading","anchor":"Random-Numbers","level":3,"text":"Random Numbers"},{"inlineContent":[{"text":"Random BInt numbers are generated using the cryptographically secure function ","type":"text"},{"code":"SecRandomCopyBytes","type":"codeVoice"}],"type":"paragraph"},{"anchor":"Prime-Number-Test","type":"heading","text":"Prime Number Test","level":3},{"inlineContent":[{"type":"text","text":"Miller-Rabin test"}],"type":"paragraph"},{"type":"heading","anchor":"Prime-Number-Generation","text":"Prime Number Generation","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The algorithm from Java BigInteger translated to Swift"}]},{"text":"Factorial","type":"heading","anchor":"Factorial","level":3},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SplitRecursive"},{"type":"text","text":" algorithm from Peter Luschny: "},{"type":"reference","identifier":"https:\/\/www.luschny.de","isActive":true}],"type":"paragraph"},{"level":3,"type":"heading","text":"Fibonacci","anchor":"Fibonacci"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"fastDoubling"},{"type":"text","text":" algorithm from Project Nayuki: "},{"isActive":true,"type":"reference","identifier":"https:\/\/www.nayuki.io"}]},{"anchor":"Jacobi-and-Kronecker-symbols","text":"Jacobi and Kronecker symbols","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Algorithm 2.3.5 from [CRANDALL]"}],"type":"paragraph"},{"level":3,"type":"heading","anchor":"Bernoulli-Numbers","text":"Bernoulli Numbers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Computed via Tangent numbers which is fast because it only involves integer arithmetic"},{"text":" ","type":"text"},{"type":"text","text":"but no fraction arithmetic"}]},{"anchor":"Chinese-Remainder-Theorem","text":"Chinese Remainder Theorem","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"The Garner algorithm 2.1.7 from [CRANDALL]","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/bigint.BigInt\/documentation\/BigInt"]]},"sections":[],"variants":[{"paths":["\/documentation\/bigint\/algorithms"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Algorithms"},"seeAlsoSections":[{"generated":true,"title":"Articles","identifiers":["doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt","doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBFraction","doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","doc:\/\/bigint.BigInt\/documentation\/BigInt\/References"],"anchor":"Articles"}],"abstract":[{"type":"text","text":"Some of the algorithms used in BigInt are described below"}],"references":{"doc://bigint.BigInt/documentation/BigInt/AboutBFraction":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBFraction","abstract":[{"type":"text","text":"Signed fractions with numerator and denominator of unbounded size"}],"kind":"article","title":"About BFraction","url":"\/documentation\/bigint\/aboutbfraction","type":"topic","role":"article"},"doc://bigint.BigInt/documentation/BigInt/Performance":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","abstract":[{"type":"text","text":"Execution times for certain BigInt operations"}],"url":"\/documentation\/bigint\/performance","kind":"article","type":"topic","role":"article","title":"Performance"},"doc://bigint.BigInt/documentation/BigInt/AboutCRT":{"role":"article","kind":"article","title":"About CRT","type":"topic","url":"\/documentation\/bigint\/aboutcrt","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","abstract":[{"type":"text","text":"Chinese Remainder Theorem"}]},"https://www.luschny.de":{"titleInlineContent":[{"text":"https:\/\/www.luschny.de","type":"text"}],"title":"https:\/\/www.luschny.de","type":"link","url":"https:\/\/www.luschny.de","identifier":"https:\/\/www.luschny.de"},"doc://bigint.BigInt/documentation/BigInt/References":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/References","abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}],"url":"\/documentation\/bigint\/references","kind":"article","type":"topic","role":"article","title":"References"},"doc://bigint.BigInt/documentation/BigInt":{"role":"collection","url":"\/documentation\/bigint","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Signed integers and fractions of unbounded size"}],"title":"BigInt","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt"},"doc://bigint.BigInt/documentation/BigInt/AboutBInt":{"title":"About BInt","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt","kind":"article","type":"topic","role":"article","url":"\/documentation\/bigint\/aboutbint","abstract":[{"type":"text","text":"Signed integers of unbounded size"}]},"https://www.nayuki.io":{"titleInlineContent":[{"text":"https:\/\/www.nayuki.io","type":"text"}],"title":"https:\/\/www.nayuki.io","type":"link","url":"https:\/\/www.nayuki.io","identifier":"https:\/\/www.nayuki.io"}}}