{"hierarchy":{"paths":[["doc:\/\/bigint.BigInt\/documentation\/BigInt"]]},"sections":[],"variants":[{"paths":["\/documentation\/bigint\/aboutbfraction"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Fractions are represented as ","type":"text"},{"type":"reference","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BFraction","isActive":true},{"type":"text","text":" values consisting of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BInt"},{"text":" numerator value and a ","type":"text"},{"type":"reference","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BInt","isActive":true},{"type":"text","text":" denominator value. The representation is normalized:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"The numerator and denominator have no common factors except 1","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The denominator is always positive"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Zero is represented as 0\/1","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Creating-BFractions","text":"Creating BFraction’s","level":3,"type":"heading"},{"syntax":"swift","type":"codeListing","code":["\/\/ From its numerator and denominator","let f = BFraction(17, 4)","","\/\/ From its decimal value","let f = BFraction(4.25)","","\/\/ From its string representation","let f = BFraction(\"4.25\")!","\/\/ or equivalently","let f = BFraction(\"425E-2\")!","","\/\/ From a continued fraction","let f = BFraction([3, 4, 12, 4])  \/\/ f = 649 \/ 200"]},{"type":"paragraph","inlineContent":[{"text":"Defining a fraction by specifying its decimal value might lead to surprises,","type":"text"},{"type":"text","text":" "},{"text":"because not all decimal values can be represented exactly as a floating point number.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"One might think that ","type":"text"},{"code":"BFraction(0.1)","type":"codeVoice"},{"type":"text","text":" would equal 1\/10,"},{"type":"text","text":" "},{"type":"text","text":"but in fact it equals 3602879701896397 \/ 36028797018963968 = 0.1000000000000000055511151231257827021181583404541015625"}]},{"inlineContent":[{"type":"text","text":"On the other hand, "},{"type":"codeVoice","code":"BFraction(\"0.1\")!"},{"text":" equals 1\/10.","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Converting BFraction’s","level":3,"anchor":"Converting-BFractions"},{"type":"paragraph","inlineContent":[{"type":"text","text":"BFraction values can be converted to String values, to decimal String values, to Double values and to Continued Fraction values."}]},{"syntax":"swift","type":"codeListing","code":["let x = BFraction(1000, 7)","","\/\/ To String","let s1 = x.asString() \/\/ s1 = \"1000 \/ 7\"","","\/\/ To decimal String","let s1 = x.asDecimalString(precision: 8, exponential: false) \/\/ s1 = \"142.85714\"","let s2 = x.asDecimalString(precision: 8, exponential: true) \/\/ s2 = \"1.4285714E+2\"","","\/\/ To Double","let d = x.asDouble() \/\/ d = 142.8571428571429","","\/\/ To Continued Fraction","let f = x.asContinuedFraction() \/\/ f = [BInt(142), BInt(1), BInt(6)]"]},{"text":"Operations","level":3,"anchor":"Operations","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The operations available to "},{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BFraction","type":"reference","isActive":true},{"type":"text","text":" are:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Arithmetic:","type":"text"}]},{"type":"text","text":" addition, subtraction, multiplication, division, exponentiation, modulus"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Comparison:","type":"text"}]},{"type":"text","text":" The six standard operations ==  !=  <  <=  >  >="}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Rounding:","type":"text"}],"type":"strong"},{"type":"text","text":" Rounding fractions to integers"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Miscellaneous:"}]},{"text":" Bernoulli Numbers, Harmonic Numbers","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","anchor":"Bernoulli-Numbers","level":3,"text":"Bernoulli Numbers"},{"type":"paragraph","inlineContent":[{"text":"The static function","type":"text"}]},{"syntax":"swift","code":["let Bn = BFraction.bernoulli(n)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"computes the n’th (n >= 0) Bernoulli number, which is a rational number."}],"type":"paragraph"},{"inlineContent":[{"text":"For example","type":"text"}],"type":"paragraph"},{"code":["print(BFraction.bernoulli(60))","print(BFraction.bernoulli(60).asDecimalString(precision: 20, exponential: true))"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"would print","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["-1215233140483755572040304994079820246041491 \/ 56786730","-2.1399949257225333665E+34"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The static function"}]},{"syntax":"swift","code":["let x = BFraction.bernoulliSequence(n)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"computes the n even numbered Bernoulli numbers B(0), B(2) … B(2 * n - 2)."}]},{"anchor":"Harmonic-Numbers","level":3,"type":"heading","text":"Harmonic Numbers"},{"inlineContent":[{"type":"text","text":"The static function"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let Hn = BFraction.harmonic(n)"]},{"type":"paragraph","inlineContent":[{"text":"computes the n’th harmonic number, that is, 1 + 1\/2 + … + 1\/n","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The static function","type":"text"}]},{"type":"codeListing","code":["let x = BFraction.harmonicSequence(n)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"returns an array containing the first n harmonic numbers.","type":"text"}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBFraction","interfaceLanguage":"swift"},"kind":"article","abstract":[{"text":"Signed fractions with numerator and denominator of unbounded size","type":"text"}],"metadata":{"roleHeading":"Article","modules":[{"name":"BigInt"}],"role":"article","title":"About BFraction"},"seeAlsoSections":[{"anchor":"Articles","identifiers":["doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt","doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","doc:\/\/bigint.BigInt\/documentation\/BigInt\/References","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Algorithms"],"title":"Articles","generated":true}],"references":{"doc://bigint.BigInt/documentation/BigInt/BFraction":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BFraction","navigatorTitle":[{"text":"BFraction","kind":"identifier"}],"title":"BFraction","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BFraction"}],"kind":"symbol","abstract":[{"type":"text","text":"The BFraction structure"}],"role":"symbol","url":"\/documentation\/bigint\/bfraction","type":"topic"},"doc://bigint.BigInt/documentation/BigInt/BInt":{"title":"BInt","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BInt","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BInt","kind":"identifier"}],"abstract":[{"type":"text","text":"The BInt structure"}],"navigatorTitle":[{"text":"BInt","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/bigint\/bint"},"doc://bigint.BigInt/documentation/BigInt/AboutBInt":{"type":"topic","url":"\/documentation\/bigint\/aboutbint","title":"About BInt","role":"article","abstract":[{"text":"Signed integers of unbounded size","type":"text"}],"kind":"article","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt"},"doc://bigint.BigInt/documentation/BigInt/Performance":{"type":"topic","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","kind":"article","abstract":[{"text":"Execution times for certain BigInt operations","type":"text"}],"title":"Performance","url":"\/documentation\/bigint\/performance","role":"article"},"doc://bigint.BigInt/documentation/BigInt/References":{"type":"topic","title":"References","url":"\/documentation\/bigint\/references","role":"article","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/References","kind":"article"},"doc://bigint.BigInt/documentation/BigInt/AboutCRT":{"type":"topic","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","kind":"article","abstract":[{"text":"Chinese Remainder Theorem","type":"text"}],"title":"About CRT","url":"\/documentation\/bigint\/aboutcrt","role":"article"},"doc://bigint.BigInt/documentation/BigInt/Algorithms":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Algorithms","role":"article","kind":"article","abstract":[{"text":"Some of the algorithms used in BigInt are described below","type":"text"}],"title":"Algorithms","url":"\/documentation\/bigint\/algorithms","type":"topic"},"doc://bigint.BigInt/documentation/BigInt":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt","url":"\/documentation\/bigint","kind":"symbol","title":"BigInt","abstract":[{"type":"text","text":"Signed integers and fractions of unbounded size"}],"role":"collection","type":"topic"}}}